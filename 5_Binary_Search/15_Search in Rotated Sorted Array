class Solution {
    public int search(int[] nums, int target) {
        int start=0;
        int end=nums.length-1;
        
        while(start<=end){
        int mid= (start+end) /2;
        if(nums[mid]==target) return mid;
        // take left part and check if target is in that range and adjust pointers 
        if(nums[start]<=nums[mid]){
            if(target<=nums[mid] && target>=nums[start]){
                end=mid-1;
            }else{
                start=mid+1;
            }
        }
        // else take right part and adjust or if it is not here also then return -1
        else{
            if(target>=nums[mid] && target<=nums[end]){  
                start=mid+1;
            }else{
                end=mid-1;
            }
        }
        }
        return -1;
    }
}



// - - - - - - - - -
// -   TC: O(logn)  -
// -   SC: O(1)  -
// - - - - - - - - -